from aiogram import types, Dispatcher
from create_bot import dp, bot
from keyboards import kb_client, kb_MakeOrder , kb_choose, kb_sushi, kb_pizzas, kb_numb_sushi, kb_numb_pizz, kb_order_also
from aiogram.types import ReplyKeyboardRemove
from data_base import sqlite_db

# @dp.message_handler(commands=['start','help'])
async def command_start(message: types.Message):
    try:
        await bot.send_message(message.from_user.id, 'MakiMaki sushi üç£ pizza üçï \n ‚è∞ –î–æ—Å—Ç–∞–≤–∫–∞ —Å 10:00 –¥–æ 02:00 \n üõí –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞\n –ò–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É üì≤ +7 775 005 40 20; +7 778 112 92 73', reply_markup=kb_client)
        await message.delete()
    except:
        message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –õ–°, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É: \nhttps://t.me/piz_zeriaBot')

# @dp.message_handler(commands=['buy'])
async def command_buy(message: types.Message):
        await sqlite_db.sql_read(message)
        await message.delete()


# @dp.message_handler(commands=['–ú–µ–Ω—é'])
async  def menu(message: types.Message):
    await sqlite_db.sql_read(message)

# @dp.message_handler(commands=['–û—Å—Ç–∞–≤–∏—Ç—å_–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'])
async  def pizza_comment(message: types.Message):
    await bot.send_message(message.from_user.id, '–ú–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å', reply_markup = ReplyKeyboardRemove())

# @dp.message_handler(commands=['–°–¥–µ–ª–∞—Ç—å_–∑–∞–∫–∞–∑'])
async def pizza_make_order(message : types.Message):
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç', reply_markup = kb_MakeOrder)

# @dp.message_handler(commands=['–°–ª—É–∂–±–∞_–¥–æ—Å—Ç–∞–≤–∫–∏'])
async  def pizza_delivery(message: types.Message):
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ', reply_markup= kb_choose)

# @dp.message_handler(commands=['–°–∞–º–æ–≤—ã–≤–æ–∑'])
async  def pizza_pickup(message: types.Message):
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é', reply_markup= kb_choose)

# @dp.message_handler(commands=['–ù–∞–∑–∞–¥'])
async  def back(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç', reply_markup= kb_client)

    # *********************************************** Sushi and sushi types ***********************************************

# @dp.message_handler(commands=['–°—É—à–∏'])
async  def sushi(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—à–∏', reply_markup= kb_sushi )

# @dp.message_handler(commands=['–§—Ä–µ—à'])
async  def fresh(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ —Å—É—à–∏', reply_markup= kb_numb_sushi )

# @dp.message_handler(commands=['–ß–∏–∑_–ª–æ—Å–æ—Å—å'])
async  def lasos(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ —Å—É—à–∏', reply_markup= kb_numb_sushi )

# @dp.message_handler(commands=['–ß–∏–∑_–∫—Ä–∞–±—Å'])
async  def crabs(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ —Å—É—à–∏', reply_markup= kb_numb_sushi )

# @dp.message_handler(commands=['–ö–∞–Ω–∞–¥–∞'])
async  def canada(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ —Å—É—à–∏', reply_markup= kb_numb_sushi )

# @dp.message_handler(commands=['–ö–∏—Ä–æ'])
async  def kiro(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ —Å—É—à–∏', reply_markup= kb_numb_sushi )

    #*********************************************** Pizza and  pizza types ***********************************************

# @dp.message_handler(commands=['–ü–∏—Ü—Ü–∞'])
async  def pizza(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É', reply_markup= kb_pizzas )

# @dp.message_handler(commands=['–ü–∏—Ü—Ü–∞_–æ–ª–∏–≤–∫–∞–º–∏'])
async  def pizz_olivki(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –ø–∏—Ü—Ü—ã', reply_markup= kb_numb_pizz )

# @dp.message_handler(commands=['–ü–∏—Ü—Ü–∞_—Ä–æ—Å—Ç–±–∏—Ñ'])
async  def pizz_rosbif(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –ø–∏—Ü—Ü—ã', reply_markup= kb_numb_pizz )

# @dp.message_handler(commands=['–ü–µ–ø–ø–µ—Ä–æ–Ω–∏'])
async def pepperoni(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –ø–∏—Ü—Ü—ã', reply_markup=kb_numb_pizz)

# @dp.message_handler(commands=['–ì—Ä–µ—á–µ—Å–∫–∞—è'])
async def grecheskaya(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –ø–∏—Ü—Ü—ã', reply_markup=kb_numb_pizz)

# @dp.message_handler(commands=['–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è'])
async def vegetarian(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –ø–∏—Ü—Ü—ã', reply_markup=kb_numb_pizz)


#*********************************************** Numbers of sushi ***********************************************

# @dp.message_handler(commands=['5_—à—Ç'])
async  def five(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup= kb_order_also )

# @dp.message_handler(commands=['10_—à—Ç'])
async  def ten(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup= kb_order_also )

# @dp.message_handler(commands=['15_—à—Ç'])
async def fifteen(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup=kb_order_also)

# @dp.message_handler(commands=['20_—à—Ç'])
async def twenty(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup=kb_order_also)

# @dp.message_handler(commands=['25_—à—Ç'])
async def twentyfive(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup=kb_order_also)

# @dp.message_handler(commands=['30_—à—Ç'])
async  def thirty(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup= kb_order_also )

# @dp.message_handler(commands=['35_—à—Ç'])
async  def thirtyfive(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup= kb_order_also )

# @dp.message_handler(commands=['40_—à—Ç'])
async def fourty(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup=kb_order_also)

# @dp.message_handler(commands=['45_—à—Ç'])
async def fourtyfive(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup=kb_order_also)

# @dp.message_handler(commands=['50_—à—Ç'])
async def fifty(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ', reply_markup=kb_order_also)

#*********************************************** Order or also ***********************************************

# @dp.message_handler(commands=['–ó–∞–∫–∞–∑–∞—Ç—å'])
async  def order(message: types.Message):
    await  bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç–æ!!! –í —Ç–µ—á–µ–Ω–∏–π —á–∞—Å–∞ –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç –±—É–¥–µ—Ç —É –≤–∞—Å.', reply_markup= ReplyKeyboardRemove() )

# @dp.message_handler(commands=['–ï—â–µ'])
async  def also(message: types.Message):
    await  bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –µ—â–µ –ª–∏–±–æ?', reply_markup= kb_MakeOrder )



def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_message_handler(command_buy, commands=['buy'])
    dp.register_message_handler(menu, commands=['–ú–µ–Ω—é'])
    dp.register_message_handler(pizza_comment, commands=['–û—Å—Ç–∞–≤–∏—Ç—å_–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'])
    dp.register_message_handler(pizza_make_order, commands=['–°–¥–µ–ª–∞—Ç—å_–∑–∞–∫–∞–∑'])
    dp.register_message_handler(pizza_delivery, commands=['–°–ª—É–∂–±–∞_–¥–æ—Å—Ç–∞–≤–∫–∏'])
    dp.register_message_handler(pizza_pickup, commands=['–°–∞–º–æ–≤—ã–≤–æ–∑'])
    dp.register_message_handler(back, commands=['–ù–∞–∑–∞–¥'])

                    # ----Sushi----

    dp.register_message_handler(sushi, commands=['–°—É—à–∏'])
    dp.register_message_handler(fresh, commands=['–§—Ä–µ—à'])
    dp.register_message_handler(lasos, commands=['–ß–∏–∑_–ª–æ—Å–æ—Å—å'])
    dp.register_message_handler(crabs, commands=['–ß–∏–∑_–∫—Ä–∞–±—Å'])
    dp.register_message_handler(canada, commands=['–ö–∞–Ω–∞–¥–∞'])
    dp.register_message_handler(kiro, commands=['–ö–∏—Ä–æ'])

                    #----Pizzas----

    dp.register_message_handler(pizza, commands=['–ü–∏—Ü—Ü–∞'])
    dp.register_message_handler(pizz_olivki, commands=['–ü–∏—Ü—Ü–∞_–æ–ª–∏–≤–∫–∞–º–∏'])
    dp.register_message_handler(pizz_rosbif, commands=['–ü–∏—Ü—Ü–∞_—Ä–æ—Å—Ç–±–∏—Ñ'])
    dp.register_message_handler(pepperoni, commands=['–ü–µ–ø–ø–µ—Ä–æ–Ω–∏'])
    dp.register_message_handler(grecheskaya, commands=['–ì—Ä–µ—á–µ—Å–∫–∞—è'])
    dp.register_message_handler(vegetarian, commands=['–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è'])

                        # ----Pizzas----

    dp.register_message_handler(five, commands=['5_—à—Ç'])
    dp.register_message_handler(ten, commands=['10_—à—Ç'])
    dp.register_message_handler(fifteen, commands=['15_—à—Ç'])
    dp.register_message_handler(twenty, commands=['20_—à—Ç'])
    dp.register_message_handler(twentyfive, commands=['25_—à—Ç'])
    dp.register_message_handler(thirty, commands=['30_—à—Ç'])
    dp.register_message_handler(thirtyfive, commands=['35_—à—Ç'])
    dp.register_message_handler(fourty, commands=['40_—à—Ç'])
    dp.register_message_handler(fourtyfive, commands=['45_—à—Ç'])
    dp.register_message_handler(fifty, commands=['50_—à—Ç'])

                # ---- order or also ----

    dp.register_message_handler(order, commands=['–ó–∞–∫–∞–∑–∞—Ç—å'])
    dp.register_message_handler(also, commands=['–ï—â–µ'])


